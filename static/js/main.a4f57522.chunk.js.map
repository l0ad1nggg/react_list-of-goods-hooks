{"version":3,"sources":["utils/utils.tsx","GoodList/GoodList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodList","visibleGoods","map","good","goodsFromServer","App","useState","isSortedBy","setIsSortedBy","isReversed","setIsReversed","goods","isSorted","preparedGoods","ALPHABETICAL","sort","good1","good2","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,6EAAAA,K,iBAAAA,E,YAAAA,M,gBCMCC,EAA4B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1C,OACE,6BACGA,EAAaC,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SCHJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMT,EFlBD,SACLU,EACAC,EACAH,GAEA,IAAMI,EAAa,YAAOF,GAE1B,OAAQC,GACN,KAAKb,EAASe,aACZD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAKlB,EAASoB,OACZN,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAY9D,OAJIX,GACFI,EAAcQ,UAGTR,EEPcS,CACnBlB,EACAG,EACAE,GAQF,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAeR,EAASe,eAEtCY,QAAS,kBAAMlB,EAAcT,EAASe,eALxC,iCAUA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAeR,EAASoB,SAEtCO,QAAS,kBAAMlB,EAAcT,EAASoB,SALxC,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAeD,IALhC,sBAUEF,GAAcE,IACd,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZlB,EAAc,IACdE,GAAc,IAqCR,sBAUJ,cAAC,EAAD,CAAUT,aAAcA,QC3E9B0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a4f57522.chunk.js","sourcesContent":["export enum SortType {\n  ALPHABETICAL = 'A',\n  LENGTH = 'L',\n}\n\nexport function getPreparedGoods(\n  goods: string[],\n  isSorted: string,\n  isReversed: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  switch (isSorted) {\n    case SortType.ALPHABETICAL:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case SortType.LENGTH:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n\n      break;\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n","import React from 'react';\n\nexport type Props = {\n  visibleGoods: string[],\n};\n\nexport const GoodList: React.FC<Props> = ({ visibleGoods }) => {\n  return (\n    <ul>\n      {visibleGoods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { SortType, getPreparedGoods } from './utils/utils';\nimport { GoodList } from './GoodList/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isSortedBy, setIsSortedBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    isSortedBy,\n    isReversed,\n  );\n\n  const reset = () => {\n    setIsSortedBy('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': isSortedBy !== SortType.ALPHABETICAL,\n          })}\n          onClick={() => setIsSortedBy(SortType.ALPHABETICAL)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': isSortedBy !== SortType.LENGTH,\n          })}\n          onClick={() => setIsSortedBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isSortedBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList visibleGoods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}