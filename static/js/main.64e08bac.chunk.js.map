{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isSorted","setIsSorted","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCK,IAAMC,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA/BR,SACEC,EACAL,EACAE,GAEA,IAAMI,EAAa,YAAOD,GAE1B,OAAQL,GACN,IAXuB,IAYrBM,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,IAdqB,IAenBH,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAY9D,OAJIT,GACFI,EAAcM,UAGTN,EAMcO,CAAiBhB,EAAiBG,EAAUE,GAOjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WA/Ce,MA+CHhB,IAEdiB,QAAS,kBAAMhB,EAjDE,MA4CnB,iCAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAxDa,MAwDDhB,IAEdiB,QAAS,kBAAMhB,EA1DA,MAqDjB,4BAUA,wBACEc,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAad,IAEfe,QAAS,kBAAMd,GAAeD,IALhC,sBAUe,KAAbF,GAAmBE,IACnB,wBACEa,KAAK,SACLD,UAAU,4BACVG,QA1CI,WACZhB,EAAY,IACZE,GAAc,IAqCR,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCtGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.64e08bac.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst IS_SORTED_ALPHABET = 'A';\nconst IS_SORTED_LENGTH = 'L';\n\nfunction getPreparedGoods(\n  goods: string[],\n  isSorted: string | '',\n  isReversed: boolean,\n): string[] {\n  const preparedGoods = [...goods];\n\n  switch (isSorted) {\n    case IS_SORTED_ALPHABET:\n      preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case IS_SORTED_LENGTH:\n      preparedGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n\n      break;\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isSorted, setIsSorted] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, isSorted, isReversed);\n\n  const reset = () => {\n    setIsSorted('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': isSorted !== IS_SORTED_ALPHABET,\n          })}\n          onClick={() => setIsSorted(IS_SORTED_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': isSorted !== IS_SORTED_LENGTH,\n          })}\n          onClick={() => setIsSorted(IS_SORTED_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(isSorted !== '' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}